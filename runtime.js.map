{"version":3,"sources":["runtime.es.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,WAAW,GAAG,uBAAQ,GAAR,CAAY,IAAZ,CAAkB,sBAAlB,CAApB;;AACA,uBAAQ,GAAR,GAAc,UAAC,GAAD,EAAM,MAAN,EAAiB;AAC7B,MAAM,MAAM,GAAG,WAAW,CAAE,GAAF,EAAO,MAAP,CAA1B;AACA,SACE,MAAM,IAAI;AACR,IAAA,IAAI,EAAE;AACJ,MAAA,GAAG,EAAE,aAAA,KAAK;AAAA,eACR,gCAAC,WAAD;AACE,UAAA,IAAI,EAAE,GADR;AAEE,UAAA,YAAY,EAAE,MAAM,CAAC,YAFvB;AAGE,UAAA,cAAc,EAAE,MAAM,CAAC;AAHzB,WAIM,KAJN,EADQ;AAAA;AADN;AADE,GADZ;AAcD,CAhBD;AAkBA;;;;;IAGqB,W;;;;;;;;;;;;;wCASE;AACnB,MAAA,WAAW,CAAC,gBAAZ,CAA6B,IAA7B,CAAmC,IAAnC;AACD;;;2CAEuB;AACtB,UAAM,KAAK,GAAG,WAAW,CAAC,gBAAZ,CAA6B,OAA7B,CAAsC,IAAtC,CAAd;AACA,MAAA,WAAW,CAAC,gBAAZ,CAA6B,MAA7B,CAAqC,KAArC,EAA4C,CAA5C;AACD;;;6BAES;AAAA,wBAC+C,KAAK,KADpD;AAAA,UACD,IADC,eACD,IADC;AAAA,UACK,YADL,eACK,YADL;AAAA,UACmB,cADnB,eACmB,cADnB;AAAA,UACsC,KADtC,sFAER;;;AACA,UAAM,MAAM,GAAG,WAAW,CAAE,IAAF,EAAQ;AAAC,QAAA,YAAY,EAAZ,YAAD;AAAe,QAAA,cAAc,EAAd;AAAf,OAAR,CAA1B;;AACA,UAAI,MAAJ,EAAY;AACV,eAAO,gCAAC,sBAAD,EAAa,KAAK,KAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,uCAAS,KAAT,CAAP;AACD;AACF;;;4BAzBe,K,EAAO;AACrB,6BAAQ,GAAR,kDAAgB,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,GAAnB,CAAuB,UAAC,GAAD;AAAA,eAAS,KAAK,CAAC,GAAD,CAAd;AAAA,OAAvB,CAAhB;;AACA,6BAAQ,GAAR,GAAc,WAAd;AACA,WAAK,gBAAL,CAAsB,GAAtB,CAA2B,UAAA,QAAQ;AAAA,eAAI,QAAQ,CAAC,WAAT,EAAJ;AAAA,OAAnC;AACA,WAAK,gBAAL,GAAwB,EAAxB;AACD;;;;EAPsC,oB;;;;gBAApB,W,sBACO,E","file":"runtime.js","sourcesContent":["import AntIcon from '@ant-design/icons-react';\nimport React, {PureComponent} from 'react';\n\nconst originalGet = AntIcon.get.bind (AntIcon);\nAntIcon.get = (key, colors) => {\n  const target = originalGet (key, colors);\n  return (\n    target || {\n      icon: {\n        tag: props => (\n          <WrapAntIcon\n            type={key}\n            primaryColor={colors.primaryColor}\n            secondaryColor={colors.secondaryColor}\n            {...props}\n          />\n        ),\n      },\n    }\n  );\n};\n\n/**\n * AntIcon wrap Component\n */\nexport default class WrapAntIcon extends PureComponent {\n  static allIconInstances = [];\n  static loadAll (icons) {\n    AntIcon.add (...Object.keys(icons).map((key) => icons[key]));\n    AntIcon.get = originalGet;\n    this.allIconInstances.map (instance => instance.forceUpdate ());\n    this.allIconInstances = [];\n  }\n\n  componentDidMount () {\n    WrapAntIcon.allIconInstances.push (this);\n  }\n\n  componentWillUnmount () {\n    const index = WrapAntIcon.allIconInstances.indexOf (this);\n    WrapAntIcon.allIconInstances.splice (index, 1);\n  }\n\n  render () {\n    const {type, primaryColor, secondaryColor, ...props} = this.props;\n    // judage target exsit, is not, show a empty svg.\n    const target = originalGet (type, {primaryColor, secondaryColor});\n    if (target) {\n      return <AntIcon {...this.props} />;\n    } else {\n      return <svg {...props} />;\n    }\n  }\n}"]}